version: '3.8'

services:
  # Marketing Project API - Main service
  api:
    build:
      context: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=DEBUG
      - TEMPLATE_VERSION=v1
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000
      - CORS_ALLOW_CREDENTIALS=true
      # Use SQLite for development (no external dependencies)
      - CONTENT_DATABASE_URL=sqlite:///./content.db
      # Optional database URLs (uncomment if you need them)
      # - POSTGRES_URL=postgresql://postgres:password@postgres:5432/marketing_project
      # - MONGODB_URL=mongodb://mongodb:27017/marketing_project
      # - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./content:/app/content
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=marketing_project
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Optional: MongoDB (uncomment if needed)
  # mongodb:
  #   image: mongo:7
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=password
  #     - MONGO_INITDB_DATABASE=marketing_project
  #   volumes:
  #     - mongodb_data:/data/db
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Optional: Redis (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

# Uncomment volumes if you enable the optional services above
# volumes:
#   postgres_data:
#   mongodb_data:
#   redis_data:
